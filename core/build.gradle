plugins {
    id 'org.flywaydb.flyway' version '7.15.0'
    id 'com.avast.gradle.docker-compose' version '0.16.12'
}

group = 'com.newyorktaxi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5555/service'
    user = 'service'
    password = 'service'
    baselineOnMigrate = true
    baselineVersion = '1.0' // Specify the version to use for baseline
}

dependencies {
    implementation project(':avro')

    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.8'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.0.Final'

    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.1.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-r2dbc', version: springBootVersion

    implementation(group: 'io.r2dbc', name: 'r2dbc-postgresql', version: '0.8.13.RELEASE') {
        exclude group: 'io.projectreactor.netty', module: 'reactor-netty'
    }

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.19.1'

    // shedlock for distributed lock management
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: shedlockVersion
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: shedlockVersion

    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.0.8'
    implementation group: 'io.projectreactor.kafka', name: 'reactor-kafka', version: '1.3.18'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '7.3.1'

    // jackon for json serialization
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion

    implementation group: 'io.netty', name: 'netty-all', version: '4.1.94.Final'

    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.2.0'
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '4.0.3'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: springBootVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-r2dbc', version: springBootVersion
    testImplementation group: 'io.projectreactor', name: 'reactor-test', version: '3.5.7'
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.18.3'
    testImplementation group: 'org.flywaydb', name: 'flyway-core', version: '9.19.4'
}

//dockerCompose {
//	useComposeFiles = ['../docker/dockerPostgres.yml', '../docker/dockerKafka.yml']
//	startedServices = ['postgres', 'kafka1', 'kafka2', 'kafka3', 'kafka-schema-registry']
//}
//
//test {
//	dependsOn composeUp
//	finalizedBy composeDown
//}

tasks.named('test') {
    useJUnitPlatform()
}
