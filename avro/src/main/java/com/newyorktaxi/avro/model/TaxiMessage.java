/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.newyorktaxi.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TaxiMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3155471125398094650L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TaxiMessage\",\"namespace\":\"com.newyorktaxi.avro.model\",\"fields\":[{\"name\":\"vendorId\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"tpepPickupDatetime\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"\"},{\"name\":\"tpepDropoffDatetime\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"\"},{\"name\":\"passengerCount\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"tripDistance\",\"type\":[\"float\",\"null\"],\"default\":0.0},{\"name\":\"rateCodeId\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"storeAndFwdFlag\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"\"},{\"name\":\"puLocationId\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"doLocationId\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"paymentType\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"fareAmount\",\"type\":[\"double\",\"null\"],\"default\":0.0},{\"name\":\"extra\",\"type\":[\"double\",\"null\"],\"default\":0.0},{\"name\":\"mtaTax\",\"type\":[\"double\",\"null\"],\"default\":0.0},{\"name\":\"tipAmount\",\"type\":[\"double\",\"null\"],\"default\":0.0},{\"name\":\"tollsAmount\",\"type\":[\"double\",\"null\"],\"default\":0.0},{\"name\":\"improvementSurcharge\",\"type\":[\"double\",\"null\"],\"default\":0.0},{\"name\":\"totalAmount\",\"type\":[\"double\",\"null\"],\"default\":0.0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TaxiMessage> ENCODER =
      new BinaryMessageEncoder<TaxiMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TaxiMessage> DECODER =
      new BinaryMessageDecoder<TaxiMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TaxiMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TaxiMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TaxiMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TaxiMessage>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TaxiMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TaxiMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TaxiMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TaxiMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Integer vendorId;
   private java.lang.String tpepPickupDatetime;
   private java.lang.String tpepDropoffDatetime;
   private java.lang.Integer passengerCount;
   private java.lang.Float tripDistance;
   private java.lang.Integer rateCodeId;
   private java.lang.String storeAndFwdFlag;
   private java.lang.Integer puLocationId;
   private java.lang.Integer doLocationId;
   private java.lang.Integer paymentType;
   private java.lang.Double fareAmount;
   private java.lang.Double extra;
   private java.lang.Double mtaTax;
   private java.lang.Double tipAmount;
   private java.lang.Double tollsAmount;
   private java.lang.Double improvementSurcharge;
   private java.lang.Double totalAmount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TaxiMessage() {}

  /**
   * All-args constructor.
   * @param vendorId The new value for vendorId
   * @param tpepPickupDatetime The new value for tpepPickupDatetime
   * @param tpepDropoffDatetime The new value for tpepDropoffDatetime
   * @param passengerCount The new value for passengerCount
   * @param tripDistance The new value for tripDistance
   * @param rateCodeId The new value for rateCodeId
   * @param storeAndFwdFlag The new value for storeAndFwdFlag
   * @param puLocationId The new value for puLocationId
   * @param doLocationId The new value for doLocationId
   * @param paymentType The new value for paymentType
   * @param fareAmount The new value for fareAmount
   * @param extra The new value for extra
   * @param mtaTax The new value for mtaTax
   * @param tipAmount The new value for tipAmount
   * @param tollsAmount The new value for tollsAmount
   * @param improvementSurcharge The new value for improvementSurcharge
   * @param totalAmount The new value for totalAmount
   */
  public TaxiMessage(java.lang.Integer vendorId, java.lang.String tpepPickupDatetime, java.lang.String tpepDropoffDatetime, java.lang.Integer passengerCount, java.lang.Float tripDistance, java.lang.Integer rateCodeId, java.lang.String storeAndFwdFlag, java.lang.Integer puLocationId, java.lang.Integer doLocationId, java.lang.Integer paymentType, java.lang.Double fareAmount, java.lang.Double extra, java.lang.Double mtaTax, java.lang.Double tipAmount, java.lang.Double tollsAmount, java.lang.Double improvementSurcharge, java.lang.Double totalAmount) {
    this.vendorId = vendorId;
    this.tpepPickupDatetime = tpepPickupDatetime;
    this.tpepDropoffDatetime = tpepDropoffDatetime;
    this.passengerCount = passengerCount;
    this.tripDistance = tripDistance;
    this.rateCodeId = rateCodeId;
    this.storeAndFwdFlag = storeAndFwdFlag;
    this.puLocationId = puLocationId;
    this.doLocationId = doLocationId;
    this.paymentType = paymentType;
    this.fareAmount = fareAmount;
    this.extra = extra;
    this.mtaTax = mtaTax;
    this.tipAmount = tipAmount;
    this.tollsAmount = tollsAmount;
    this.improvementSurcharge = improvementSurcharge;
    this.totalAmount = totalAmount;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vendorId;
    case 1: return tpepPickupDatetime;
    case 2: return tpepDropoffDatetime;
    case 3: return passengerCount;
    case 4: return tripDistance;
    case 5: return rateCodeId;
    case 6: return storeAndFwdFlag;
    case 7: return puLocationId;
    case 8: return doLocationId;
    case 9: return paymentType;
    case 10: return fareAmount;
    case 11: return extra;
    case 12: return mtaTax;
    case 13: return tipAmount;
    case 14: return tollsAmount;
    case 15: return improvementSurcharge;
    case 16: return totalAmount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vendorId = (java.lang.Integer)value$; break;
    case 1: tpepPickupDatetime = value$ != null ? value$.toString() : null; break;
    case 2: tpepDropoffDatetime = value$ != null ? value$.toString() : null; break;
    case 3: passengerCount = (java.lang.Integer)value$; break;
    case 4: tripDistance = (java.lang.Float)value$; break;
    case 5: rateCodeId = (java.lang.Integer)value$; break;
    case 6: storeAndFwdFlag = value$ != null ? value$.toString() : null; break;
    case 7: puLocationId = (java.lang.Integer)value$; break;
    case 8: doLocationId = (java.lang.Integer)value$; break;
    case 9: paymentType = (java.lang.Integer)value$; break;
    case 10: fareAmount = (java.lang.Double)value$; break;
    case 11: extra = (java.lang.Double)value$; break;
    case 12: mtaTax = (java.lang.Double)value$; break;
    case 13: tipAmount = (java.lang.Double)value$; break;
    case 14: tollsAmount = (java.lang.Double)value$; break;
    case 15: improvementSurcharge = (java.lang.Double)value$; break;
    case 16: totalAmount = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'vendorId' field.
   * @return The value of the 'vendorId' field.
   */
  public java.lang.Integer getVendorId() {
    return vendorId;
  }


  /**
   * Sets the value of the 'vendorId' field.
   * @param value the value to set.
   */
  public void setVendorId(java.lang.Integer value) {
    this.vendorId = value;
  }

  /**
   * Gets the value of the 'tpepPickupDatetime' field.
   * @return The value of the 'tpepPickupDatetime' field.
   */
  public java.lang.String getTpepPickupDatetime() {
    return tpepPickupDatetime;
  }


  /**
   * Sets the value of the 'tpepPickupDatetime' field.
   * @param value the value to set.
   */
  public void setTpepPickupDatetime(java.lang.String value) {
    this.tpepPickupDatetime = value;
  }

  /**
   * Gets the value of the 'tpepDropoffDatetime' field.
   * @return The value of the 'tpepDropoffDatetime' field.
   */
  public java.lang.String getTpepDropoffDatetime() {
    return tpepDropoffDatetime;
  }


  /**
   * Sets the value of the 'tpepDropoffDatetime' field.
   * @param value the value to set.
   */
  public void setTpepDropoffDatetime(java.lang.String value) {
    this.tpepDropoffDatetime = value;
  }

  /**
   * Gets the value of the 'passengerCount' field.
   * @return The value of the 'passengerCount' field.
   */
  public java.lang.Integer getPassengerCount() {
    return passengerCount;
  }


  /**
   * Sets the value of the 'passengerCount' field.
   * @param value the value to set.
   */
  public void setPassengerCount(java.lang.Integer value) {
    this.passengerCount = value;
  }

  /**
   * Gets the value of the 'tripDistance' field.
   * @return The value of the 'tripDistance' field.
   */
  public java.lang.Float getTripDistance() {
    return tripDistance;
  }


  /**
   * Sets the value of the 'tripDistance' field.
   * @param value the value to set.
   */
  public void setTripDistance(java.lang.Float value) {
    this.tripDistance = value;
  }

  /**
   * Gets the value of the 'rateCodeId' field.
   * @return The value of the 'rateCodeId' field.
   */
  public java.lang.Integer getRateCodeId() {
    return rateCodeId;
  }


  /**
   * Sets the value of the 'rateCodeId' field.
   * @param value the value to set.
   */
  public void setRateCodeId(java.lang.Integer value) {
    this.rateCodeId = value;
  }

  /**
   * Gets the value of the 'storeAndFwdFlag' field.
   * @return The value of the 'storeAndFwdFlag' field.
   */
  public java.lang.String getStoreAndFwdFlag() {
    return storeAndFwdFlag;
  }


  /**
   * Sets the value of the 'storeAndFwdFlag' field.
   * @param value the value to set.
   */
  public void setStoreAndFwdFlag(java.lang.String value) {
    this.storeAndFwdFlag = value;
  }

  /**
   * Gets the value of the 'puLocationId' field.
   * @return The value of the 'puLocationId' field.
   */
  public java.lang.Integer getPuLocationId() {
    return puLocationId;
  }


  /**
   * Sets the value of the 'puLocationId' field.
   * @param value the value to set.
   */
  public void setPuLocationId(java.lang.Integer value) {
    this.puLocationId = value;
  }

  /**
   * Gets the value of the 'doLocationId' field.
   * @return The value of the 'doLocationId' field.
   */
  public java.lang.Integer getDoLocationId() {
    return doLocationId;
  }


  /**
   * Sets the value of the 'doLocationId' field.
   * @param value the value to set.
   */
  public void setDoLocationId(java.lang.Integer value) {
    this.doLocationId = value;
  }

  /**
   * Gets the value of the 'paymentType' field.
   * @return The value of the 'paymentType' field.
   */
  public java.lang.Integer getPaymentType() {
    return paymentType;
  }


  /**
   * Sets the value of the 'paymentType' field.
   * @param value the value to set.
   */
  public void setPaymentType(java.lang.Integer value) {
    this.paymentType = value;
  }

  /**
   * Gets the value of the 'fareAmount' field.
   * @return The value of the 'fareAmount' field.
   */
  public java.lang.Double getFareAmount() {
    return fareAmount;
  }


  /**
   * Sets the value of the 'fareAmount' field.
   * @param value the value to set.
   */
  public void setFareAmount(java.lang.Double value) {
    this.fareAmount = value;
  }

  /**
   * Gets the value of the 'extra' field.
   * @return The value of the 'extra' field.
   */
  public java.lang.Double getExtra() {
    return extra;
  }


  /**
   * Sets the value of the 'extra' field.
   * @param value the value to set.
   */
  public void setExtra(java.lang.Double value) {
    this.extra = value;
  }

  /**
   * Gets the value of the 'mtaTax' field.
   * @return The value of the 'mtaTax' field.
   */
  public java.lang.Double getMtaTax() {
    return mtaTax;
  }


  /**
   * Sets the value of the 'mtaTax' field.
   * @param value the value to set.
   */
  public void setMtaTax(java.lang.Double value) {
    this.mtaTax = value;
  }

  /**
   * Gets the value of the 'tipAmount' field.
   * @return The value of the 'tipAmount' field.
   */
  public java.lang.Double getTipAmount() {
    return tipAmount;
  }


  /**
   * Sets the value of the 'tipAmount' field.
   * @param value the value to set.
   */
  public void setTipAmount(java.lang.Double value) {
    this.tipAmount = value;
  }

  /**
   * Gets the value of the 'tollsAmount' field.
   * @return The value of the 'tollsAmount' field.
   */
  public java.lang.Double getTollsAmount() {
    return tollsAmount;
  }


  /**
   * Sets the value of the 'tollsAmount' field.
   * @param value the value to set.
   */
  public void setTollsAmount(java.lang.Double value) {
    this.tollsAmount = value;
  }

  /**
   * Gets the value of the 'improvementSurcharge' field.
   * @return The value of the 'improvementSurcharge' field.
   */
  public java.lang.Double getImprovementSurcharge() {
    return improvementSurcharge;
  }


  /**
   * Sets the value of the 'improvementSurcharge' field.
   * @param value the value to set.
   */
  public void setImprovementSurcharge(java.lang.Double value) {
    this.improvementSurcharge = value;
  }

  /**
   * Gets the value of the 'totalAmount' field.
   * @return The value of the 'totalAmount' field.
   */
  public java.lang.Double getTotalAmount() {
    return totalAmount;
  }


  /**
   * Sets the value of the 'totalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(java.lang.Double value) {
    this.totalAmount = value;
  }

  /**
   * Creates a new TaxiMessage RecordBuilder.
   * @return A new TaxiMessage RecordBuilder
   */
  public static com.newyorktaxi.avro.model.TaxiMessage.Builder newBuilder() {
    return new com.newyorktaxi.avro.model.TaxiMessage.Builder();
  }

  /**
   * Creates a new TaxiMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TaxiMessage RecordBuilder
   */
  public static com.newyorktaxi.avro.model.TaxiMessage.Builder newBuilder(com.newyorktaxi.avro.model.TaxiMessage.Builder other) {
    if (other == null) {
      return new com.newyorktaxi.avro.model.TaxiMessage.Builder();
    } else {
      return new com.newyorktaxi.avro.model.TaxiMessage.Builder(other);
    }
  }

  /**
   * Creates a new TaxiMessage RecordBuilder by copying an existing TaxiMessage instance.
   * @param other The existing instance to copy.
   * @return A new TaxiMessage RecordBuilder
   */
  public static com.newyorktaxi.avro.model.TaxiMessage.Builder newBuilder(com.newyorktaxi.avro.model.TaxiMessage other) {
    if (other == null) {
      return new com.newyorktaxi.avro.model.TaxiMessage.Builder();
    } else {
      return new com.newyorktaxi.avro.model.TaxiMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for TaxiMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TaxiMessage>
    implements org.apache.avro.data.RecordBuilder<TaxiMessage> {

    private java.lang.Integer vendorId;
    private java.lang.String tpepPickupDatetime;
    private java.lang.String tpepDropoffDatetime;
    private java.lang.Integer passengerCount;
    private java.lang.Float tripDistance;
    private java.lang.Integer rateCodeId;
    private java.lang.String storeAndFwdFlag;
    private java.lang.Integer puLocationId;
    private java.lang.Integer doLocationId;
    private java.lang.Integer paymentType;
    private java.lang.Double fareAmount;
    private java.lang.Double extra;
    private java.lang.Double mtaTax;
    private java.lang.Double tipAmount;
    private java.lang.Double tollsAmount;
    private java.lang.Double improvementSurcharge;
    private java.lang.Double totalAmount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.newyorktaxi.avro.model.TaxiMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vendorId)) {
        this.vendorId = data().deepCopy(fields()[0].schema(), other.vendorId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.tpepPickupDatetime)) {
        this.tpepPickupDatetime = data().deepCopy(fields()[1].schema(), other.tpepPickupDatetime);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.tpepDropoffDatetime)) {
        this.tpepDropoffDatetime = data().deepCopy(fields()[2].schema(), other.tpepDropoffDatetime);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.passengerCount)) {
        this.passengerCount = data().deepCopy(fields()[3].schema(), other.passengerCount);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.tripDistance)) {
        this.tripDistance = data().deepCopy(fields()[4].schema(), other.tripDistance);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.rateCodeId)) {
        this.rateCodeId = data().deepCopy(fields()[5].schema(), other.rateCodeId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.storeAndFwdFlag)) {
        this.storeAndFwdFlag = data().deepCopy(fields()[6].schema(), other.storeAndFwdFlag);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.puLocationId)) {
        this.puLocationId = data().deepCopy(fields()[7].schema(), other.puLocationId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.doLocationId)) {
        this.doLocationId = data().deepCopy(fields()[8].schema(), other.doLocationId);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.paymentType)) {
        this.paymentType = data().deepCopy(fields()[9].schema(), other.paymentType);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.fareAmount)) {
        this.fareAmount = data().deepCopy(fields()[10].schema(), other.fareAmount);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.extra)) {
        this.extra = data().deepCopy(fields()[11].schema(), other.extra);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.mtaTax)) {
        this.mtaTax = data().deepCopy(fields()[12].schema(), other.mtaTax);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.tipAmount)) {
        this.tipAmount = data().deepCopy(fields()[13].schema(), other.tipAmount);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.tollsAmount)) {
        this.tollsAmount = data().deepCopy(fields()[14].schema(), other.tollsAmount);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.improvementSurcharge)) {
        this.improvementSurcharge = data().deepCopy(fields()[15].schema(), other.improvementSurcharge);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.totalAmount)) {
        this.totalAmount = data().deepCopy(fields()[16].schema(), other.totalAmount);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing TaxiMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.newyorktaxi.avro.model.TaxiMessage other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.vendorId)) {
        this.vendorId = data().deepCopy(fields()[0].schema(), other.vendorId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tpepPickupDatetime)) {
        this.tpepPickupDatetime = data().deepCopy(fields()[1].schema(), other.tpepPickupDatetime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tpepDropoffDatetime)) {
        this.tpepDropoffDatetime = data().deepCopy(fields()[2].schema(), other.tpepDropoffDatetime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.passengerCount)) {
        this.passengerCount = data().deepCopy(fields()[3].schema(), other.passengerCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tripDistance)) {
        this.tripDistance = data().deepCopy(fields()[4].schema(), other.tripDistance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rateCodeId)) {
        this.rateCodeId = data().deepCopy(fields()[5].schema(), other.rateCodeId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.storeAndFwdFlag)) {
        this.storeAndFwdFlag = data().deepCopy(fields()[6].schema(), other.storeAndFwdFlag);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.puLocationId)) {
        this.puLocationId = data().deepCopy(fields()[7].schema(), other.puLocationId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.doLocationId)) {
        this.doLocationId = data().deepCopy(fields()[8].schema(), other.doLocationId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paymentType)) {
        this.paymentType = data().deepCopy(fields()[9].schema(), other.paymentType);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fareAmount)) {
        this.fareAmount = data().deepCopy(fields()[10].schema(), other.fareAmount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.extra)) {
        this.extra = data().deepCopy(fields()[11].schema(), other.extra);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.mtaTax)) {
        this.mtaTax = data().deepCopy(fields()[12].schema(), other.mtaTax);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.tipAmount)) {
        this.tipAmount = data().deepCopy(fields()[13].schema(), other.tipAmount);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.tollsAmount)) {
        this.tollsAmount = data().deepCopy(fields()[14].schema(), other.tollsAmount);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.improvementSurcharge)) {
        this.improvementSurcharge = data().deepCopy(fields()[15].schema(), other.improvementSurcharge);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.totalAmount)) {
        this.totalAmount = data().deepCopy(fields()[16].schema(), other.totalAmount);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'vendorId' field.
      * @return The value.
      */
    public java.lang.Integer getVendorId() {
      return vendorId;
    }


    /**
      * Sets the value of the 'vendorId' field.
      * @param value The value of 'vendorId'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setVendorId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.vendorId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'vendorId' field has been set.
      * @return True if the 'vendorId' field has been set, false otherwise.
      */
    public boolean hasVendorId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'vendorId' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearVendorId() {
      vendorId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tpepPickupDatetime' field.
      * @return The value.
      */
    public java.lang.String getTpepPickupDatetime() {
      return tpepPickupDatetime;
    }


    /**
      * Sets the value of the 'tpepPickupDatetime' field.
      * @param value The value of 'tpepPickupDatetime'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setTpepPickupDatetime(java.lang.String value) {
      validate(fields()[1], value);
      this.tpepPickupDatetime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tpepPickupDatetime' field has been set.
      * @return True if the 'tpepPickupDatetime' field has been set, false otherwise.
      */
    public boolean hasTpepPickupDatetime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tpepPickupDatetime' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearTpepPickupDatetime() {
      tpepPickupDatetime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tpepDropoffDatetime' field.
      * @return The value.
      */
    public java.lang.String getTpepDropoffDatetime() {
      return tpepDropoffDatetime;
    }


    /**
      * Sets the value of the 'tpepDropoffDatetime' field.
      * @param value The value of 'tpepDropoffDatetime'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setTpepDropoffDatetime(java.lang.String value) {
      validate(fields()[2], value);
      this.tpepDropoffDatetime = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tpepDropoffDatetime' field has been set.
      * @return True if the 'tpepDropoffDatetime' field has been set, false otherwise.
      */
    public boolean hasTpepDropoffDatetime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tpepDropoffDatetime' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearTpepDropoffDatetime() {
      tpepDropoffDatetime = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'passengerCount' field.
      * @return The value.
      */
    public java.lang.Integer getPassengerCount() {
      return passengerCount;
    }


    /**
      * Sets the value of the 'passengerCount' field.
      * @param value The value of 'passengerCount'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setPassengerCount(java.lang.Integer value) {
      validate(fields()[3], value);
      this.passengerCount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'passengerCount' field has been set.
      * @return True if the 'passengerCount' field has been set, false otherwise.
      */
    public boolean hasPassengerCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'passengerCount' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearPassengerCount() {
      passengerCount = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'tripDistance' field.
      * @return The value.
      */
    public java.lang.Float getTripDistance() {
      return tripDistance;
    }


    /**
      * Sets the value of the 'tripDistance' field.
      * @param value The value of 'tripDistance'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setTripDistance(java.lang.Float value) {
      validate(fields()[4], value);
      this.tripDistance = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'tripDistance' field has been set.
      * @return True if the 'tripDistance' field has been set, false otherwise.
      */
    public boolean hasTripDistance() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'tripDistance' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearTripDistance() {
      tripDistance = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'rateCodeId' field.
      * @return The value.
      */
    public java.lang.Integer getRateCodeId() {
      return rateCodeId;
    }


    /**
      * Sets the value of the 'rateCodeId' field.
      * @param value The value of 'rateCodeId'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setRateCodeId(java.lang.Integer value) {
      validate(fields()[5], value);
      this.rateCodeId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'rateCodeId' field has been set.
      * @return True if the 'rateCodeId' field has been set, false otherwise.
      */
    public boolean hasRateCodeId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'rateCodeId' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearRateCodeId() {
      rateCodeId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeAndFwdFlag' field.
      * @return The value.
      */
    public java.lang.String getStoreAndFwdFlag() {
      return storeAndFwdFlag;
    }


    /**
      * Sets the value of the 'storeAndFwdFlag' field.
      * @param value The value of 'storeAndFwdFlag'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setStoreAndFwdFlag(java.lang.String value) {
      validate(fields()[6], value);
      this.storeAndFwdFlag = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'storeAndFwdFlag' field has been set.
      * @return True if the 'storeAndFwdFlag' field has been set, false otherwise.
      */
    public boolean hasStoreAndFwdFlag() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'storeAndFwdFlag' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearStoreAndFwdFlag() {
      storeAndFwdFlag = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'puLocationId' field.
      * @return The value.
      */
    public java.lang.Integer getPuLocationId() {
      return puLocationId;
    }


    /**
      * Sets the value of the 'puLocationId' field.
      * @param value The value of 'puLocationId'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setPuLocationId(java.lang.Integer value) {
      validate(fields()[7], value);
      this.puLocationId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'puLocationId' field has been set.
      * @return True if the 'puLocationId' field has been set, false otherwise.
      */
    public boolean hasPuLocationId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'puLocationId' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearPuLocationId() {
      puLocationId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'doLocationId' field.
      * @return The value.
      */
    public java.lang.Integer getDoLocationId() {
      return doLocationId;
    }


    /**
      * Sets the value of the 'doLocationId' field.
      * @param value The value of 'doLocationId'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setDoLocationId(java.lang.Integer value) {
      validate(fields()[8], value);
      this.doLocationId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'doLocationId' field has been set.
      * @return True if the 'doLocationId' field has been set, false otherwise.
      */
    public boolean hasDoLocationId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'doLocationId' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearDoLocationId() {
      doLocationId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentType' field.
      * @return The value.
      */
    public java.lang.Integer getPaymentType() {
      return paymentType;
    }


    /**
      * Sets the value of the 'paymentType' field.
      * @param value The value of 'paymentType'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setPaymentType(java.lang.Integer value) {
      validate(fields()[9], value);
      this.paymentType = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentType' field has been set.
      * @return True if the 'paymentType' field has been set, false otherwise.
      */
    public boolean hasPaymentType() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'paymentType' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearPaymentType() {
      paymentType = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'fareAmount' field.
      * @return The value.
      */
    public java.lang.Double getFareAmount() {
      return fareAmount;
    }


    /**
      * Sets the value of the 'fareAmount' field.
      * @param value The value of 'fareAmount'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setFareAmount(java.lang.Double value) {
      validate(fields()[10], value);
      this.fareAmount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'fareAmount' field has been set.
      * @return True if the 'fareAmount' field has been set, false otherwise.
      */
    public boolean hasFareAmount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'fareAmount' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearFareAmount() {
      fareAmount = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'extra' field.
      * @return The value.
      */
    public java.lang.Double getExtra() {
      return extra;
    }


    /**
      * Sets the value of the 'extra' field.
      * @param value The value of 'extra'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setExtra(java.lang.Double value) {
      validate(fields()[11], value);
      this.extra = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'extra' field has been set.
      * @return True if the 'extra' field has been set, false otherwise.
      */
    public boolean hasExtra() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'extra' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearExtra() {
      extra = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'mtaTax' field.
      * @return The value.
      */
    public java.lang.Double getMtaTax() {
      return mtaTax;
    }


    /**
      * Sets the value of the 'mtaTax' field.
      * @param value The value of 'mtaTax'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setMtaTax(java.lang.Double value) {
      validate(fields()[12], value);
      this.mtaTax = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'mtaTax' field has been set.
      * @return True if the 'mtaTax' field has been set, false otherwise.
      */
    public boolean hasMtaTax() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'mtaTax' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearMtaTax() {
      mtaTax = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipAmount' field.
      * @return The value.
      */
    public java.lang.Double getTipAmount() {
      return tipAmount;
    }


    /**
      * Sets the value of the 'tipAmount' field.
      * @param value The value of 'tipAmount'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setTipAmount(java.lang.Double value) {
      validate(fields()[13], value);
      this.tipAmount = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'tipAmount' field has been set.
      * @return True if the 'tipAmount' field has been set, false otherwise.
      */
    public boolean hasTipAmount() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'tipAmount' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearTipAmount() {
      tipAmount = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'tollsAmount' field.
      * @return The value.
      */
    public java.lang.Double getTollsAmount() {
      return tollsAmount;
    }


    /**
      * Sets the value of the 'tollsAmount' field.
      * @param value The value of 'tollsAmount'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setTollsAmount(java.lang.Double value) {
      validate(fields()[14], value);
      this.tollsAmount = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'tollsAmount' field has been set.
      * @return True if the 'tollsAmount' field has been set, false otherwise.
      */
    public boolean hasTollsAmount() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'tollsAmount' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearTollsAmount() {
      tollsAmount = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'improvementSurcharge' field.
      * @return The value.
      */
    public java.lang.Double getImprovementSurcharge() {
      return improvementSurcharge;
    }


    /**
      * Sets the value of the 'improvementSurcharge' field.
      * @param value The value of 'improvementSurcharge'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setImprovementSurcharge(java.lang.Double value) {
      validate(fields()[15], value);
      this.improvementSurcharge = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'improvementSurcharge' field has been set.
      * @return True if the 'improvementSurcharge' field has been set, false otherwise.
      */
    public boolean hasImprovementSurcharge() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'improvementSurcharge' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearImprovementSurcharge() {
      improvementSurcharge = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalAmount' field.
      * @return The value.
      */
    public java.lang.Double getTotalAmount() {
      return totalAmount;
    }


    /**
      * Sets the value of the 'totalAmount' field.
      * @param value The value of 'totalAmount'.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder setTotalAmount(java.lang.Double value) {
      validate(fields()[16], value);
      this.totalAmount = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'totalAmount' field has been set.
      * @return True if the 'totalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'totalAmount' field.
      * @return This builder.
      */
    public com.newyorktaxi.avro.model.TaxiMessage.Builder clearTotalAmount() {
      totalAmount = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TaxiMessage build() {
      try {
        TaxiMessage record = new TaxiMessage();
        record.vendorId = fieldSetFlags()[0] ? this.vendorId : (java.lang.Integer) defaultValue(fields()[0]);
        record.tpepPickupDatetime = fieldSetFlags()[1] ? this.tpepPickupDatetime : (java.lang.String) defaultValue(fields()[1]);
        record.tpepDropoffDatetime = fieldSetFlags()[2] ? this.tpepDropoffDatetime : (java.lang.String) defaultValue(fields()[2]);
        record.passengerCount = fieldSetFlags()[3] ? this.passengerCount : (java.lang.Integer) defaultValue(fields()[3]);
        record.tripDistance = fieldSetFlags()[4] ? this.tripDistance : (java.lang.Float) defaultValue(fields()[4]);
        record.rateCodeId = fieldSetFlags()[5] ? this.rateCodeId : (java.lang.Integer) defaultValue(fields()[5]);
        record.storeAndFwdFlag = fieldSetFlags()[6] ? this.storeAndFwdFlag : (java.lang.String) defaultValue(fields()[6]);
        record.puLocationId = fieldSetFlags()[7] ? this.puLocationId : (java.lang.Integer) defaultValue(fields()[7]);
        record.doLocationId = fieldSetFlags()[8] ? this.doLocationId : (java.lang.Integer) defaultValue(fields()[8]);
        record.paymentType = fieldSetFlags()[9] ? this.paymentType : (java.lang.Integer) defaultValue(fields()[9]);
        record.fareAmount = fieldSetFlags()[10] ? this.fareAmount : (java.lang.Double) defaultValue(fields()[10]);
        record.extra = fieldSetFlags()[11] ? this.extra : (java.lang.Double) defaultValue(fields()[11]);
        record.mtaTax = fieldSetFlags()[12] ? this.mtaTax : (java.lang.Double) defaultValue(fields()[12]);
        record.tipAmount = fieldSetFlags()[13] ? this.tipAmount : (java.lang.Double) defaultValue(fields()[13]);
        record.tollsAmount = fieldSetFlags()[14] ? this.tollsAmount : (java.lang.Double) defaultValue(fields()[14]);
        record.improvementSurcharge = fieldSetFlags()[15] ? this.improvementSurcharge : (java.lang.Double) defaultValue(fields()[15]);
        record.totalAmount = fieldSetFlags()[16] ? this.totalAmount : (java.lang.Double) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TaxiMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<TaxiMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TaxiMessage>
    READER$ = (org.apache.avro.io.DatumReader<TaxiMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.vendorId == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.vendorId);
    }

    if (this.tpepPickupDatetime == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.tpepPickupDatetime);
    }

    if (this.tpepDropoffDatetime == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.tpepDropoffDatetime);
    }

    if (this.passengerCount == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.passengerCount);
    }

    if (this.tripDistance == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeFloat(this.tripDistance);
    }

    if (this.rateCodeId == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.rateCodeId);
    }

    if (this.storeAndFwdFlag == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.storeAndFwdFlag);
    }

    if (this.puLocationId == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.puLocationId);
    }

    if (this.doLocationId == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.doLocationId);
    }

    if (this.paymentType == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.paymentType);
    }

    if (this.fareAmount == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.fareAmount);
    }

    if (this.extra == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.extra);
    }

    if (this.mtaTax == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.mtaTax);
    }

    if (this.tipAmount == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.tipAmount);
    }

    if (this.tollsAmount == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.tollsAmount);
    }

    if (this.improvementSurcharge == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.improvementSurcharge);
    }

    if (this.totalAmount == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.totalAmount);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.vendorId = null;
      } else {
        this.vendorId = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.tpepPickupDatetime = null;
      } else {
        this.tpepPickupDatetime = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.tpepDropoffDatetime = null;
      } else {
        this.tpepDropoffDatetime = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.passengerCount = null;
      } else {
        this.passengerCount = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.tripDistance = null;
      } else {
        this.tripDistance = in.readFloat();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.rateCodeId = null;
      } else {
        this.rateCodeId = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.storeAndFwdFlag = null;
      } else {
        this.storeAndFwdFlag = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.puLocationId = null;
      } else {
        this.puLocationId = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.doLocationId = null;
      } else {
        this.doLocationId = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.paymentType = null;
      } else {
        this.paymentType = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.fareAmount = null;
      } else {
        this.fareAmount = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.extra = null;
      } else {
        this.extra = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.mtaTax = null;
      } else {
        this.mtaTax = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.tipAmount = null;
      } else {
        this.tipAmount = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.tollsAmount = null;
      } else {
        this.tollsAmount = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.improvementSurcharge = null;
      } else {
        this.improvementSurcharge = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.totalAmount = null;
      } else {
        this.totalAmount = in.readDouble();
      }

    } else {
      for (int i = 0; i < 17; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.vendorId = null;
          } else {
            this.vendorId = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.tpepPickupDatetime = null;
          } else {
            this.tpepPickupDatetime = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.tpepDropoffDatetime = null;
          } else {
            this.tpepDropoffDatetime = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.passengerCount = null;
          } else {
            this.passengerCount = in.readInt();
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.tripDistance = null;
          } else {
            this.tripDistance = in.readFloat();
          }
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.rateCodeId = null;
          } else {
            this.rateCodeId = in.readInt();
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.storeAndFwdFlag = null;
          } else {
            this.storeAndFwdFlag = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 0) {
            in.readNull();
            this.puLocationId = null;
          } else {
            this.puLocationId = in.readInt();
          }
          break;

        case 8:
          if (in.readIndex() != 0) {
            in.readNull();
            this.doLocationId = null;
          } else {
            this.doLocationId = in.readInt();
          }
          break;

        case 9:
          if (in.readIndex() != 0) {
            in.readNull();
            this.paymentType = null;
          } else {
            this.paymentType = in.readInt();
          }
          break;

        case 10:
          if (in.readIndex() != 0) {
            in.readNull();
            this.fareAmount = null;
          } else {
            this.fareAmount = in.readDouble();
          }
          break;

        case 11:
          if (in.readIndex() != 0) {
            in.readNull();
            this.extra = null;
          } else {
            this.extra = in.readDouble();
          }
          break;

        case 12:
          if (in.readIndex() != 0) {
            in.readNull();
            this.mtaTax = null;
          } else {
            this.mtaTax = in.readDouble();
          }
          break;

        case 13:
          if (in.readIndex() != 0) {
            in.readNull();
            this.tipAmount = null;
          } else {
            this.tipAmount = in.readDouble();
          }
          break;

        case 14:
          if (in.readIndex() != 0) {
            in.readNull();
            this.tollsAmount = null;
          } else {
            this.tollsAmount = in.readDouble();
          }
          break;

        case 15:
          if (in.readIndex() != 0) {
            in.readNull();
            this.improvementSurcharge = null;
          } else {
            this.improvementSurcharge = in.readDouble();
          }
          break;

        case 16:
          if (in.readIndex() != 0) {
            in.readNull();
            this.totalAmount = null;
          } else {
            this.totalAmount = in.readDouble();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










